---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: userpools.cognitoidp.aws.jet.crossplane.io
spec:
  group: cognitoidp.aws.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - awsjet
    kind: UserPool
    listKind: UserPoolList
    plural: userpools
    singular: userpool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UserPool is the Schema for the UserPools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserPoolSpec defines the desired state of UserPool
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountRecoverySetting:
                    items:
                      properties:
                        recoveryMechanism:
                          items:
                            properties:
                              name:
                                type: string
                              priority:
                                type: number
                            required:
                            - name
                            - priority
                            type: object
                          type: array
                      required:
                      - recoveryMechanism
                      type: object
                    type: array
                  adminCreateUserConfig:
                    items:
                      properties:
                        allowAdminCreateUserOnly:
                          type: boolean
                        inviteMessageTemplate:
                          items:
                            properties:
                              emailMessage:
                                type: string
                              emailSubject:
                                type: string
                              smsMessage:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  aliasAttributes:
                    items:
                      type: string
                    type: array
                  autoVerifiedAttributes:
                    items:
                      type: string
                    type: array
                  deviceConfiguration:
                    items:
                      properties:
                        challengeRequiredOnNewDevice:
                          type: boolean
                        deviceOnlyRememberedOnUserPrompt:
                          type: boolean
                      type: object
                    type: array
                  emailConfiguration:
                    items:
                      properties:
                        configurationSet:
                          type: string
                        emailSendingAccount:
                          type: string
                        fromEmailAddress:
                          type: string
                        replyToEmailAddress:
                          type: string
                        sourceArn:
                          type: string
                      type: object
                    type: array
                  emailVerificationMessage:
                    type: string
                  emailVerificationSubject:
                    type: string
                  lambdaConfig:
                    items:
                      properties:
                        createAuthChallenge:
                          type: string
                        customEmailSender:
                          items:
                            properties:
                              lambdaArn:
                                type: string
                              lambdaVersion:
                                type: string
                            required:
                            - lambdaArn
                            - lambdaVersion
                            type: object
                          type: array
                        customMessage:
                          type: string
                        customSmsSender:
                          items:
                            properties:
                              lambdaArn:
                                type: string
                              lambdaVersion:
                                type: string
                            required:
                            - lambdaArn
                            - lambdaVersion
                            type: object
                          type: array
                        defineAuthChallenge:
                          type: string
                        kmsKeyId:
                          type: string
                        postAuthentication:
                          type: string
                        postConfirmation:
                          type: string
                        preAuthentication:
                          type: string
                        preSignUp:
                          type: string
                        preTokenGeneration:
                          type: string
                        userMigration:
                          type: string
                        verifyAuthChallengeResponse:
                          type: string
                      type: object
                    type: array
                  mfaConfiguration:
                    type: string
                  name:
                    type: string
                  passwordPolicy:
                    items:
                      properties:
                        minimumLength:
                          type: number
                        requireLowercase:
                          type: boolean
                        requireNumbers:
                          type: boolean
                        requireSymbols:
                          type: boolean
                        requireUppercase:
                          type: boolean
                        temporaryPasswordValidityDays:
                          type: number
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  schema:
                    items:
                      properties:
                        attributeDataType:
                          type: string
                        developerOnlyAttribute:
                          type: boolean
                        mutable:
                          type: boolean
                        name:
                          type: string
                        numberAttributeConstraints:
                          items:
                            properties:
                              maxValue:
                                type: string
                              minValue:
                                type: string
                            type: object
                          type: array
                        required:
                          type: boolean
                        stringAttributeConstraints:
                          items:
                            properties:
                              maxLength:
                                type: string
                              minLength:
                                type: string
                            type: object
                          type: array
                      required:
                      - attributeDataType
                      - name
                      type: object
                    type: array
                  smsAuthenticationMessage:
                    type: string
                  smsConfiguration:
                    items:
                      properties:
                        externalId:
                          type: string
                        snsCallerArn:
                          type: string
                      required:
                      - externalId
                      - snsCallerArn
                      type: object
                    type: array
                  smsVerificationMessage:
                    type: string
                  softwareTokenMfaConfiguration:
                    items:
                      properties:
                        enabled:
                          type: boolean
                      required:
                      - enabled
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    type: object
                  userPoolAddOns:
                    items:
                      properties:
                        advancedSecurityMode:
                          type: string
                      required:
                      - advancedSecurityMode
                      type: object
                    type: array
                  usernameAttributes:
                    items:
                      type: string
                    type: array
                  usernameConfiguration:
                    items:
                      properties:
                        caseSensitive:
                          type: boolean
                      required:
                      - caseSensitive
                      type: object
                    type: array
                  verificationMessageTemplate:
                    items:
                      properties:
                        defaultEmailOption:
                          type: string
                        emailMessage:
                          type: string
                        emailMessageByLink:
                          type: string
                        emailSubject:
                          type: string
                        emailSubjectByLink:
                          type: string
                        smsMessage:
                          type: string
                      type: object
                    type: array
                required:
                - name
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: UserPoolStatus defines the observed state of UserPool.
            properties:
              atProvider:
                properties:
                  arn:
                    type: string
                  creationDate:
                    type: string
                  customDomain:
                    type: string
                  domain:
                    type: string
                  endpoint:
                    type: string
                  estimatedNumberOfUsers:
                    type: number
                  id:
                    type: string
                  lastModifiedDate:
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
